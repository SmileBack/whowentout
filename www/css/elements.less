.opacity(@opacity: 1) {
  /* Sensible browsers */
  opacity: @opacity;
  /* Netscape */
  -moz-opacity: @opacity;
  /* Safari 1.x */
  -khtml-opacity: @opacity;
  /* Satanic browsers */
  -ms-filter: %('alpha(opacity=%s)', @opacity * 100); // some IE versions
  filter: e(%('alpha(opacity=%s)', @opacity * 100));  // most other IE versions
}

.transition() {
    -webkit-transition: @arguments;
    -moz-transition: @arguments;
    -o-transition: @arguments;
    -ms-transition: @arguments;
}

.scale(@size) {
    -o-transform: scale(@size);
    -webkit-transform: scale(@size);
    -moz-transform: scale(@size);
    -ms-transform: scale(@size);
    transform: scale(@size);
}

.rotate(@deg:5deg){
  -o-transform: rotate(@deg);
  -webkit-transform: rotate(@deg);
  -moz-transform: rotate(@deg);
  -ms-transform: rotate(@deg);
  transform: rotate(@deg);
}

.shadow() {
  -webkit-box-shadow: @arguments;
 -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}

.shadow_inset(@x, @y, @blur, @spread, @color) {
    -webkit-box-shadow: inset @x @y @blur @spread @color;
    -moz-box-shadow: inset @x @y @blur @spread @color;
    -ms-box-shadow: inset @x @y @blur @spread @color;
    -o-box-shadow: inset @x @y @blur @spread @color;
    box-shadow: inset @x @y @blur @spread @color;
}

.border_radius(@r) {
    -webkit-border-radius: @r;
    -moz-border-radius: @r;
    -ms-border-radius: @r;
    -o-border-radius: @r;
    border-radius: @r;
}

// Multiple Border-Radii (CB) (all corners may have different radii)
.border_radius_multi(@topright: 10px, @bottomright: 10px, @bottomleft: 10px, @topleft: 10px) {
	-khtml-border-top-right-radius: @topright;
	-khtml-border-bottom-right-radius: @bottomright;
	-khtml-border-bottom-left-radius: @bottomleft;
	-khtml-border-top-left-radius: @topleft;

	-moz-border-top-right-radius: @topright;
	-moz-border-bottom-right-radius: @bottomright;
	-moz-border-bottom-left-radius: @bottomleft;
	-moz-border-top-left-radius: @topleft;

	-webkit-border-top-right-radius: @topright;
	-webkit-border-bottom-right-radius: @bottomright;
	-webkit-border-bottom-left-radius: @bottomleft;
	-webkit-border-top-left-radius: @topleft;

	border-top-right-radius: @topright;
	border-bottom-right-radius: @bottomright;
	border-bottom-left-radius: @bottomleft;
	border-top-left-radius: @topleft;
}

.arrow(@direction, @color, @size) when (@direction = up) {
    border-color: transparent transparent @color transparent;
}

.arrow(@direction, @color, @size) when (@direction = down) {
    border-color: @color transparent transparent transparent;
}

.arrow(@direction, @color, @size) when (@direction = left) {
    border-color: transparent @color transparent transparent;
}

.arrow(@direction, @color, @size) when (@direction = right) {
    border-color: transparent transparent transparent @color;
}

.arrow(@direction, @color: black, @size: 20px) {
    background: transparent;
    border-width: @size;
    border-style: solid;
    display: inline-block;
}

.tip(@direction, @background_color: #333, @color: white, @arrow_size: 8px) {
    text-align: center;
    position: relative;
    background-color: @background_color;
    color: @color;
    .tip_arrow {
        .arrow(@direction, @background_color, @arrow_size);
        position: absolute;
    }
    .tip_content {
        padding: 4px;
    }
}

.tip(@direction, @background_color, @color, @arrow_size) when (@direction = up) {
    .tip_arrow {
        left: 50%;
        top: 0;
        margin-top: -2 * @arrow_size;
        margin-left: -1 * @arrow_size;
    }
}

.tip(@direction, @background_color, @color, @arrow_size) when (@direction = down) {
    .tip_arrow {
        left: 50%;
        bottom: 0;
        margin-bottom: -2 * @arrow_size;
        margin-left: -1 * @arrow_size;
    }
}

.tip(@direction, @background_color, @color, @arrow_size) when (@direction = left) {
    .tip_arrow {
        left: 0;
        top: 50%;
        margin-top: -1 * @arrow_size;
        margin-left: -2 * @arrow_size;
    }
}

.tip(@direction, @background_color, @color, @arrow_size) when (@direction = right) {
    .tip_arrow {
        right: 0;
        top: 50%;
        margin-top: -1 * @arrow_size;
        margin-right: -2 * @arrow_size;
    }
}

.gallery {
    > li {
        display: inline-block;
        vertical-align: top;
        margin: 15px;
    }
}


.comma_separated {
    > li { display: inline; }
    > li:after {
        content: ", ";
    }
    > li:last-child:after {
        content: "";
    }
}

.file_input {
    position: relative;
    input[type="file"] {
        position: relative;
        text-align: right;
        z-index: 2;
        .opacity(0);
        width: 100%;
        height: 36px;
    }
    button {
        position: absolute;
        z-index: 1;
        top: 0;
        left: 0;
    }
}

.thumb(@size, @height) {
    overflow: hidden;
    width: @size;
    height: @height;
    > img {
        min-width: @size;
        min-height: @height;
    }
}

.hidden {
    display: none !important;
}
